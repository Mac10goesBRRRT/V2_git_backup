

#####################################################################
#   Macros
#####################################################################


[gcode_macro G32]
gcode:   
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}
    QUAD_GANTRY_LEVEL
    G28 Z
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12
mesh_pps: 2,2

   
[gcode_macro PRINT_START]
description: Prepares the Printer for a job
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    STATUS_HEATING
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    M190 S{bedtemp}    
    G32                            ; home all axes
                                                          ; set & wait for bed temp
    M109 S170
    M117 Cleaning Nozzle
    CLEAN_NOZZLE
    M117 Calibrating Z
    CALIBRATE_Z
    M117 Bed Mesh
    #BED_MESH_CALIBRATE
    ADAPTIVE_BED_MESH
    G1 Z20 F3000                   ; move nozzle away from bed
    M109 S{hotendtemp}
    G1 E45
    M117 Purge Line
    STATUS_PRINTING
    PURGE_LINE
    UPDATE_DELAYED_GCODE ID=PROGRESS_BAR DURATION=5

   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    UPDATE_DELAYED_GCODE ID=PROGRESS_BAR DURATION=5
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    G1 E-40                        ; remove filament out of the Nozzlebreak for Revo Hotend
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_READY

[gcode_macro PURGE_LINE]
description: Purges the filament out of the nozzle
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE
    M109 S250
    G90                             ; absolute positioning
    M83                             ; relative extruder positioning
    G1 X100 Y1 Z0.4 F10000
    G1 X250 E20 F1000             ; intro line
    G1 E-0.5 Z5                 ; retract and nozzle lift
    RESTORE_GCODE_STATE NAME=PURGE_LINE

[gcode_macro _SHUTDOWN_PI]
gcode:
  {action_call_remote_method("shutdown_machine")}


[gcode_macro PRINTER_OFF]
description: Safely shuts down the Raspberry Pi
gcode:
    _Park_Toolhead
    G90
    G0 Z100 F2000
    G4 P5000
    M400
    {% if printer["extruder"].temperature > 50 %}
    RESPOND TYPE=error MSG="Hotend still hot!"
    {% else %}
    _SHUTDOWN_PI
    {% endif %}